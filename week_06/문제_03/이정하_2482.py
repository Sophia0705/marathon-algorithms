# 색상환에 포함된 색의 개수 N (4 ~ 1000)
N = int(input())
# N색상환에서 선택할 색의 수 K (1 ~ N)
K = int(input())

# dp배열 -> 1번~N번까지의 색 중에서 K개를 선택했을 때의 경우의 수 : colors[N][K]
colors = [[0] * (K + 1) for _ in range(N + 1)]

if 2 * K > N:  # 색상환의 개수보다 골라야하는 개수인 K가 절반 이상이면 경우의 수 x
    print(0)  # 따로 안해도 되지만 이렇게 하면 빨리 끝날수도있지않을까..?
else:
    # 주어진 색이 0개일 때부터 N개일 때까지 순회
    for n in range(N + 1):
        # 색깔 n개 중에 0개 선택하는 경우의 수 == 1
        colors[n][0] = 1
        # 색깔 n개 중에 1개 선택 하는 경우의 수 == n
        colors[n][1] = n

    # 불가능한 경우(ex: (3,2))는 0으로 남겨지게 됨. (3,0), (3,1)은 이미 있음 => 4부터!
    for i in range(4, N + 1):  #
        for j in range(2, K + 1):  # 어차피 0개, 1개는 이미 위에서 저장해 둠.
            colors[i][j] = colors[i - 1][j] + colors[i - 2][j - 1]
    # (5,3) = (4,3) + (3,2)  = 0+0 = 0
    # (4,3) = (3,3) + (2,2) = 0+0
    # (3,3) = (2,2) = 0
    # ---
    # (5,4)도 0
    # ---
    # (4,2) = (3,2) + (2,1) = 0 + 2 = 2
    print(colors[N][K] % 1000000003)