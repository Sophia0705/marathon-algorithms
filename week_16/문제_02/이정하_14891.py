import sys
from collections import deque

input = sys.stdin.readline
t = [deque(list(map(int, input().rstrip()))) for _ in range(4)]  # 톱니 상태를 4개의 deque로 저장하기

# 톱니 돌리기
k = int(input())  # 회전 횟수 입력받기
for _ in range(k):  # 입력받은 회전 횟수만큼 반복하기
    r = []  # 처음 톱니 상태 저장
    for i in range(4):
        r.append([t[i][6], t[i][2]])  # 각 톱니의 왼쪽(6번 인덱스)과 오른쪽(2번 인덱스) 상태 저장하기
    n, d = map(int, input().split())  # 회전시킬 톱니 번호와 방향 입력받기
    n = n - 1  # 톱니 번호를 인덱스로 변환하기 (1~4 -> 0~3)

    # 왼쪽에 있는 톱니들 돌리기
    if n != 0:  # 첫 번째 톱니가 아닌 경우
        for i in range(n, 0, -1):  # 현재 톱니부터 왼쪽으로 이동하며 확인하기
            if r[i][0] != r[i - 1][1]:  # 맞닿은 극이 다른 경우
                if (n - (i - 1)) % 2 == 0:  # 회전 방향 결정하기 (짝수 간격이면 같은 방향)
                    t[i - 1].rotate(d)  # 같은 방향으로 회전하기
                elif (n - (i - 1)) % 2 != 0:  # 홀수 간격이면 반대 방향
                    t[i - 1].rotate(-1 * d)  # 반대 방향으로 회전하기
            elif r[i][0] == r[i - 1][1]:  # 맞닿은 극이 같은 경우
                break  # 더 이상 회전하지 않으므로 반복 중단하기

    # 오른쪽에 있는 톱니들 돌리기
    if n != 3:  # 마지막 톱니가 아닌 경우
        for i in range(n, 3):  # 현재 톱니부터 오른쪽으로 이동하며 확인하기
            if r[i][1] != r[i + 1][0]:  # 맞닿은 극이 다른 경우
                if (n - (i + 1)) % 2 == 0:  # 회전 방향 결정하기 (짝수 간격이면 같은 방향)
                    t[i + 1].rotate(d)  # 같은 방향으로 회전하기
                elif (n - (i + 1)) % 2 != 0:  # 홀수 간격이면 반대 방향
                    t[i + 1].rotate(-1 * d)  # 반대 방향으로 회전하기
            elif r[i][1] == r[i + 1][0]:  # 맞닿은 극이 같은 경우
                break  # 더 이상 회전하지 않으므로 반복 중단하기
    t[n].rotate(d)  # 선택된 톱니 회전하기


res = 0  # 결과값 초기화하기
if t[0][0] == 1:  # 첫 번째 톱니의 12시 방향이 S극인 경우
    res += 1  # 1점 추가하기
if t[1][0] == 1:  # 두 번째 톱니 12시 방향이 S극인 경우
    res += 2  # 2점 추가하기
if t[2][0] == 1:  # 세 번째 톱니
    res += 4  # 4점 추가하기
if t[3][0] == 1:  # 네 번째 톱니
    res += 8  # 8점 추가하기
print(res)